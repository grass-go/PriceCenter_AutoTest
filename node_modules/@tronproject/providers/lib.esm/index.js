"use strict";
import { Provider } from "@tronproject/abstract-provider";
import { getNetwork } from "@tronproject/networks";
import { BaseProvider, Resolver } from "./base-provider";
import { JsonRpcProvider } from "./tron-json-rpc-provider";
import { Formatter, isCommunityResourcable, isCommunityResource, showThrottleMessage } from "./formatter";
import { Logger } from "@tronproject/logger";
import { version } from "./_version";
const logger = new Logger(version);
////////////////////////
// Helper Functions
// @ts-ignore
function getDefaultProvider(network, options) {
    if (network == null) {
        logger.throwArgumentError("unsupported URL scheme", "network", network);
    }
    const match = network.match(/^(http)s?:/i);
    if (match) {
        switch (match[1]) {
            case "http":
                return new JsonRpcProvider(network);
            default:
                // throw new Error()
                logger.throwArgumentError("unsupported URL scheme", "network", network);
        }
    }
    logger.throwArgumentError("unsupported URL scheme", "network", network);
}
////////////////////////
// Exports
export { 
// Abstract Providers (or Abstract-ish)
Provider, BaseProvider, Resolver, 
///////////////////////
// Concreate Providers
JsonRpcProvider, 
///////////////////////
// Functions
getDefaultProvider, getNetwork, isCommunityResource, isCommunityResourcable, showThrottleMessage, 
///////////////////////
// Objects
Formatter };
//# sourceMappingURL=index.js.map